spring:
  kafka:
    bootstrap-servers: ${KAFKA_BROKER_URL:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${random.uuid}
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      enable-auto-commit: true
      auto-commit-interval: 100ms
      max-poll-records: ${KAFKA_MAX_POLL_RECORDS:500}
      properties:
        max-poll-interval-ms: ${KAFKA_MAX_POLL_INTERVAL_MS:300000}
        spring:
          deserializer:
            key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
            value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
          json:
            trusted.packages: warehouse.com.eventstarter.model

kafka:
  consumer:
    fixed-backoff:
      interval: ${KAFKA_CONSUMER_FIXED_BACKOFF_INTERVAL:2000}
      max-failure: ${KAFKA_CONSUMER_FIXED_BACKOFF_INTERVAL_MAX_FAILURE:5}
  topics:
    audit:
      name: ${AUDIT_EVENT:warehouse-audit-event}
      event-class: AuditEvent